// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RacePodBackend.Data;

#nullable disable

namespace RacePodBackend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240106121937_Initial Migration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("RacePodBackend.Model.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("RacePodBackend.Model.PodcastEpisode", b =>
                {
                    b.Property<Guid>("PodcastEpisodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AudioSource")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("AudioType")
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<string>("EpisodeDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PodcastSeriesId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("PodcastEpisodeId");

                    b.HasIndex("PodcastSeriesId");

                    b.ToTable("PodcastEpisodes");
                });

            modelBuilder.Entity("RacePodBackend.Model.PodcastSeries", b =>
                {
                    b.Property<Guid>("PodcastSeriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Copyright")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("Keywords")
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.Property<string>("Language")
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("TEXT");

                    b.HasKey("PodcastSeriesId");

                    b.ToTable("PodcastSeries");
                });

            modelBuilder.Entity("RacePodBackend.Model.PodcastSeriesCategory", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PodcastSeriesId")
                        .HasColumnType("TEXT");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PodcastSeriesId");

                    b.ToTable("PodcastCategories");
                });

            modelBuilder.Entity("RacePodBackend.Model.PodcastEpisode", b =>
                {
                    b.HasOne("RacePodBackend.Model.PodcastSeries", "PodcastSeries")
                        .WithMany("Episodes")
                        .HasForeignKey("PodcastSeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PodcastSeries");
                });

            modelBuilder.Entity("RacePodBackend.Model.PodcastSeriesCategory", b =>
                {
                    b.HasOne("RacePodBackend.Model.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RacePodBackend.Model.PodcastSeries", "PodcastSeries")
                        .WithMany()
                        .HasForeignKey("PodcastSeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("PodcastSeries");
                });

            modelBuilder.Entity("RacePodBackend.Model.PodcastSeries", b =>
                {
                    b.Navigation("Episodes");
                });
#pragma warning restore 612, 618
        }
    }
}
